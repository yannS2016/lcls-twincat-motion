<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_ReadParameterNC" Id="{0a080461-8875-4b57-a673-44abaad03a9d}" SpecialFunc="None">
    <Declaration><![CDATA[(*
    Read and refresh axis parameters
*)
FUNCTION_BLOCK FB_ReadParameterNC IMPLEMENTS I_ReadParameter
VAR
    {attribute 'no_copy'}
    AxisRef : REFERENCE TO AXIS_REF;
    // NC parameters that are exposed with pytmc pragmas
    {attribute 'pytmc' := '
        pv: PLC:AxisPar
        io: i
        field: DESC Axis configuration parameters in the numerical controller.
    '}
    stAxisParametersExposed : ST_AxisParameterSetExposed;
    // MC_ReadParameterSet Output
    fbMcReadParams: MC_ReadParameterSet;
    {attribute 'hide'}
    stAxisParameters: ST_AxisParameterSet;
    {attribute 'hide'}
    NCParamsTimer : TON;
    {attribute 'hide'}
    bExecParamsRead: BOOL;
    {attribute 'hide'}
    bAxisParamsInit: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Periodic update of NC parameters
NCParamsTimer( IN:=NOT bExecParamsRead, PT:=T#1S);

bExecParamsRead S= NCParamsTimer.Q;

fbMcReadParams(
    Parameter:=stAxisParameters,
    Axis:=AxisRef,
    Execute:= bExecParamsRead );

// Copy axis parameters that we want to expose to the EPICS layer.
stAxisParametersExposed.bCtrlEnablePosDiffControl     := stAxisParameters.bCtrlEnablePosDiffControl;
stAxisParametersExposed.bEncEnableSoftEndMaxControl   := stAxisParameters.bEncEnableSoftEndMaxControl;
stAxisParametersExposed.bEncEnableSoftEndMinControl   := stAxisParameters.bEncEnableSoftEndMinControl;
stAxisParametersExposed.fAccelerationMax              := stAxisParameters.fAccelerationMax;
stAxisParametersExposed.fCtrlPosDiffMax               := stAxisParameters.fCtrlPosDiffMax;
stAxisParametersExposed.fCtrlPosDiffMaxTime           := stAxisParameters.fCtrlPosDiffMaxTime;
stAxisParametersExposed.fDecelerationMax              := stAxisParameters.fDecelerationMax;
stAxisParametersExposed.fEncSoftEndMax                := stAxisParameters.fEncSoftEndMax;
stAxisParametersExposed.fEncSoftEndMin                := stAxisParameters.fEncSoftEndMin;
stAxisParametersExposed.fVeloMaximum                  := stAxisParameters.fVeloMaximum;
stAxisParametersExposed.fEncOffset               	  := stAxisParameters.fEncOffset;
stAxisParametersExposed.fEncScaleFactorInternal       := stAxisParameters.fEncScaleFactorInternal;

bExecParamsRead R= fbMcReadParams.Done OR fbMcReadParams.Error;
bAxisParamsInit S= fbMcReadParams.Done;
]]></ST>
    </Implementation>
    <Property Name="AxisReadParamsInit" Id="{0109e5c1-4895-4b1a-9b52-46a0b8e2477f}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY AxisReadParamsInit : BOOL
]]></Declaration>
      <Get Name="Get" Id="{20a2d9ed-7c9e-44bc-9052-1da3a8039812}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AxisReadParamsInit := bAxisParamsInit;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Busy" Id="{027c86ab-2c4c-431c-83d3-a5f280a9f4be}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{71f3d4a5-5815-498a-9dc2-dd0484d5e903}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := fbMcReadParams.Busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="CallAfterInit" Id="{f18b7d6f-c3da-460b-84aa-32d432fd132a}">
      <Declaration><![CDATA[METHOD PUBLIC CallAfterInit
VAR_INPUT
    AxisRef : REFERENCE TO AXIS_REF;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.AxisRef REF= AxisRef;

]]></ST>
      </Implementation>
    </Method>
    <Property Name="Done" Id="{e98d6c07-6b86-4458-b10f-56cbec3afbe1}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{0b3720d9-74c0-4b42-ab6a-f777060e2826}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := fbMcReadParams.Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{48964554-9c0e-4daf-bea2-36931ed4e51d}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c59c9eb4-e912-4bca-ad7b-68b0f66032f4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := fbMcReadParams.Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorID" Id="{530b840d-dfad-4b4f-9afc-f45789cd4abf}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY ErrorID : UDINT
]]></Declaration>
      <Get Name="Get" Id="{e4b754f9-0ba4-4250-b008-bc6a86a67490}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorID := fbMcReadParams.ErrorID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_Init" Id="{9a2f321a-6442-4481-94f8-cad0f90b6a8f}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
    AxisRef : REFERENCE TO AXIS_REF;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.AxisRef REF= AxisRef;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Message" Id="{87c74a72-7209-4ca3-a50c-82afcaba9293}">
      <Declaration><![CDATA[{warning 'Add property implementation'}
PROPERTY Message : T_MAXSTRING
]]></Declaration>
      <Get Name="Get" Id="{22b2cbd8-48fc-4d7c-b048-86eb05394900}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ReadParameters" Id="{7e1988df-13bf-409f-9bba-5c8975b3fe8b}">
      <Declaration><![CDATA[METHOD ReadParameters
VAR_INPUT
    Enable : BOOL;
    RefreshDelay : TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbMcReadParams(
    Parameter:=stAxisParameters,
    Axis:=THIS^.AxisRef,
    Execute:= Enable );

NCParamsTimer.PT:=RefreshDelay;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>